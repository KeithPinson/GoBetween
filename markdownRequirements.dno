#! dno -version 0.1 -markup khand -tab 4

// These requirements were drawn from the CommonMark Spec v0.21 however they diverge significantly
// with regards to which html tags can be used and on some other issues.

[[Markdown Document]]
Markdown's original purpose was to convert type written text to html markup
For our purposes, Markdown's job (including the embedded html) is to convert text to the GoBetween Intermediate Structure

[[Terminology]]
The Markdown Requirements Document defines the following terms to mean:

    [[Character]]
    A character is a unicode code point
    No file encoding, ie. "UTF-8", is specified, so its size the code point and the file encoding in use

    [[Lines]]
    A line is a sequence of zero or more characters followed by an end of line[End of Line]]

    [[End of Line]]
    An end of line is one of the following:
        An end of File
        A newline (U+000A)
        A carriage return (U+000D)
        Or, a carriage return + newline (U+000D,U+000A)

    [[Blank Line]]
    A line containing no characters after all the whitespace has been removed is a blank line[[Whitespace]]

    [[Space]]
    A space is U+0020

    [[Tab]]
    A tab is U+0009

    [[Dot]]
    A period or full-stop is U+002E

    [[Whitespace Character]]
    A whitespace character is a character that moves the location of the cursor but does not print anything, it can be any of the following:
        &#x0009; ( ) 0x0009 "horizontal tab"
        &#x000A; ( ) 0x000A "linefeed"
        &#x000B; ( ) 0x000B "vertical tab"
        &#x000C; ( ) 0x000C "form feed"
        &#x000D; ( ) 0x000D "carriage return"
        &#x0020; ( ) 0x0020 "space"
        &nbsp;  () 0x00A0 "no-break space"
        &#x1680; () 0x1680 "ogham space mark"
        &#x2000; () 0x2000 "en quad"
        &#x2001; () 0x2001 "em quad"
        &ensp; () 0x2002 "en space"
        &emsp; () 0x2003 "em space"
        &#x2004; () 0x2004 "three-per-em space"
        &#x2005; () 0x2005 "four-per-em space"
        &#x2006; () 0x2006 "six-per-em-space"
        &#x2007; () 0x2007 "figure space"
        &#x2008; () 0x2008 "punctuation space"
        &thinsp; () 0x2009 "thin space"
        &#x200A; () 0x200A "hair space"
        &#x202F; () 0x202F "narrow no-break space"
        &#x205F; () 0x205F "medium mathematical space"
        &#x3000; () 0x3000 "ideographic space"

    [[Whitespace]]
    Whitespace is a sequence of one or more whitespace characters[[Whitespace Character]]

    [[Non Whitespace Character]]
    A non-whitespace character is any character that is not a whitespace character[[Whitespace Character]]

    [[Punctuation Character]]
    A punctuation character is any one of the ASCII characters:
        (!, ", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \, ], ^, _, `, {, |, }, ~)

    [[Unicode Punctuation Character]]
    A unicode punctuation character are punctuation characters beyond the ASCII character range found in the unicode classes: Pc, Pd, Pe, Pf, Pi, Po, and Ps.

    [[Escaped Punctuation]]
    Any punctuation character can be preceded by a backslash (\) which indicates it should be treated like a literal punctuation character and not a markdown element

[[Syntax]]
Any sequence of characters is a valid markdown document[[Character]]
With the exception of entity references and metadata, HTML consists of characters with html tags inserted
Markdown can be characters without html tags, but ultimately, like html, it converts to characters with inserted html tags
Markdown elements may contain nested markdown elements
With the exception of two-part links, all Markdown is transformative near the location where it is occurs
With the exception of ordered lists, all markdown begins with a non-alphanumeric character
Ordered lists begin with two-part identifier, a number and either a dot "." or a closing parenthesis ")"
So, Markdown is a transformative language where any character other than the following does not transform:
    (These characters may trigger a transform)
    #
    *
    _
    -
    +
    nn. (up to 10 digits before the dot) [[ordered list item]]
    0x9 [[Tab]]
    0x20 0x20 0x20 0x20 (4 spaces at the beginning of a line) [[Space]]
    0x20 0x20 (2 spaces at the end of a line) [[Space]]
    \
    `
    ~
    <
    >
    !
    [
    {
When markdown is completed transforming, it will only have inserted elements into the existing text
None of the existing text will have been changed except for 0x0000, whitespace and backslash escapes


[[Tabs]]
Tabs in lines are not expanded to spaces

[[Indentation]]
When evaluating levels of indentation, a tab should behave as if replaced by 4 spaces

[[Unicode Zero]]
For security reasons, the Unicode character U+0000 must be replaced with the replacement character (U+FFFD)

[[URL]]
A Url should follow the current specifications defined in RFC3986-URI Generic Syntax

[[Blocks]]
Conceptually a document consists of a chain of block elements with inline elements, where some blocks contain subblocks
The block elements are:
    Paragraphs (contains subblocks) [[Paragraph]]
    Blank Lines[[Blank Line]]
    Backslash escapes[[Backslash]]
    Block Quotes (contains subblocks) [[Block Quote]]
    Lists[[List]]
    List Items (contains subblocks) [[List Item]]
    Headers (contains subblocks) [[Header]]
    Horizontal Rules[[Horizontal Rule]]
    Code Blocks[[Code Block]]
    Links (Link text contains subblocks) [[Link]]
    Html Blocks[[Html Markup]]

[[Inlines]]
Found embedded in a line, may be an inline element
The inline elements are:
    Entity References[[Entity Reference]]
    Code Spans[[Code Spans]]
    Emphasis[[Emphasis]]
    Strong[[Strong]]
    Images[[Image]]
    Auto Links[[Auto Link]]
    Text[[Content Text]]

[[Precedence]]
Block elements are of higher precedence than inline elements.
Of the Block elements the order of precedence, starting with the highest first:
    1. Backslash Escapes
    2. Fenced Code Block
    3. List Item
    4. Indented Code Block
    5. HTML
    6. Blank Line
    7. Block Quotes
    8. Setext Header
    9. Horizontal Rule
    10. ATX Header
    11. Paragraph
    12. List
    13. Link
Markdown places constraints on the markup that HTML does not in an effort to convert a naturally readable document to HTML
Having a List block after a List item seems nonsensically, but precedence implies which block the parser tries to identify before another not the order
In the case of a List, it is not identified until the first list item is identified and that will not be identified until all the way down to the level of a paragraph

[[Sub-Blocks]]
Blocks that can be nested in another block are referred to as a sub-block
A sub-block can never span past its parent block boundary

[[Horizontal Rule]]
A horizontal rule cannot contain a sub-block
A horizontal rule takes precedence over a list item
A horizontal rule take precedence over a paragraph
It consists of a single line
It does not need to be preceded nor followed by a blank line
The line can have up to three leading whitespace characters[[Whitespace Character]]
It cannot have 4 or more leading whitespace characters[[Whitespace Character]]
It is identified by either of the three or more characters:
    *** (asterisks, U+002A)
    --- (hyphens, U+002D)
    ___ (under-bars, U+005F)
Any number of spaces can be inserted between or after the three or more characters
The three or more characters must all be the same, no mixing
Any other characters are besides space is not allowed
It should generate html: {{{<hr/>}}}

[[Headers]]
A header is a single line of characters
It can be identified in one of two ways, either:
    By hash (#) characters, as an ATX Header[[ATX Header]]
    Or, by a following line of (-) or (=), as Setext Header [[Setext Header]]
Headers are inlines[[Inlines]]
Leading and following whitespace characters are trimmed
It cannot be a sub-block of any other block

[[ATX Header]]
An ATX header is a header preceded by 1 to 6 hash characters (#) and a space
It can be preceded by up 3 whitespace characters
It can be followed by any number of whitespace characters
It can be followed by any number of hash (#) characters which are preceded by a space
Only hash (#) characters or spaces can surround the header characters
If two or more leading hash characters are used, they must be touching with no spaces between
It should generate the html header tag where the number of hashes is the heading level
An ATX Header can be empty, if so no spaces are required after or before the preceding or following hashes (#)
An empty header can have any number of whitespace characters including none if there is no following hash (#)
It is of high precedent than a paragraph

[[Setext Header]]
A Setext Header is a header followed on the next line by contiguous hyphen (-) or equal characters (=)[[Setext Underline]]
The inline text of a Setext header cannot be a blank line
It is a lower precedent than a paragraph

[[Setext Underline]]
Equals (=) generate html, <h1> tags
Hyphens (-) generate html, <h2> tags
Hyphens and equal signs cannot be mixed
Spaces or any other character cannot intersperse the hyphens or equal signs
One to a max of 120 hyphens or equal signs can be used
It can be preceded by up 3 whitespace characters
It can be followed by any number of whitespace characters

[[Code Blocks]]
Code is characters or lines of characters
It can be identfied in one of two ways, either:
  By indenting[[Indented Code Block Lines]]
  Or, by fencing[[Fenced Code Block]]
Code blocks are not inlines and require no further processing
Code blocks should be transformed to html as the code block surrounded by the <pre> and <code> tags

[[Indented Code Block Lines]]
Indented code block lines are identified by 4 whitespace characters or a tab character
The leading 4 whitespace characters or the tab are not included in the code block
A code block may contain leading whitespace characters
Adjoining indented code block lines are all a part of the same code block
A blank line is considered part of a code block if it is surrounded by code block lines
Paragraphs are of lower precedence
Lists are of higher precedence

[[Fenced Code Block]]
A code block fence is identified by triple backticks (```) or tildes (~~~) surrounding the code
Additional backticks (`) or tildes (~) can adjoin the triples and will be considered part of the fence not the code
The closing triple and its additional backticks (`) or tildes (~) must in at least number the opening fence
Backticks (`) or tildes (~) in the closing fence beyond the number in the opening fence are valid and considered as part of the closing fence
The opening and closing fence can have up to three leading whitespace characters
The number leading white spaces of the opening fence is assumed to be the indentation of the code block and that number of leading spaces will be removed from each code block line
Whatespace cannot be interleaved between the triples
If no closing fence exists the code block is assumed to continue until the end of the document
A fenced code block can have an info string[[Code Info String]]

[[Code Info String]]
The first word following the opening fence will be used to create a "class" attribute of the html <code> tag
The "class" attribute be set equal to the string "language-" with the word appended to it, eg. class="language-ruby"
If the opening fence begins a line all characters on that line are assumed to be a part of the code info string
If a space follows the opening fence the word that follows if one exists is used to compose the class attribute
If a space follows the opening fence and there are characters beyond the first word and the fence begins a line then the addional characters are considered part of the fence and ignored
If no space follows then the characters following the last backtick (`) or tilde (~) until the end of line or whitespace is used to compose the class attribute
If the opening fence does not begin a line then the code info string can only consist of a single word and must adjoin the opening fence with no spaces

[[HTML Markup]]
Html Markup may be copied and pasted into a document, so all HTML Markup should be processed
For the purposes of markdown we are only concerned with a subset of html, but still we must be able to identify the following declarations:
    Html comment[[HTML Comment]]
    Xml Declaration[[XML Declaration]]
    Doctype Declaration[[Doctype Declaration]]
    Character Data[[Character Data]]
    Html Tag[[HTML Tag]]
Code blocks have a higher precedence than all HTML markup
All HTML that is generated from Markdown is treated as inline markup

[[HTML Comment]]
An html comment is preserved and is inserted into the resulting document unaltered
A Html comment has an opening sequence of of 4 characters, <!--
It can be followed by any characters including newlines and carriage returns
It is terminated by 3 characters, -->

[[XML Declaration]]
An Xml declaration is identified and then ignored and dropped from the generated document
An Xml declration starts with 2 characters, <?
It is followed by characters including newlines and carriage returns
It is terminated by 2 characters, ?>

[[Doctype Declaration]]
A doctype declaration is identified and the ignored and dropped from the generated document
It starts with 2 characters, <!
It is supposed to be the first declaration in an html file, but we will identify it if it is misplaced
It can contain any characters including carriage return and newline
It is terminated by a single greater-than (>)

[[Character Data]]
Character Data is typically used with Xml and scripts, it and all the data it contains is to be inserted into the generated document unaltered
It starts with the following sequence of 9 characters, <![CDATA[
It can contain any character including newlines and carriage returns
It is terminated with the just 3 characters, ]]>

[[Html Tag]]
All Html tags can be identified by
    A tag name[[Tag Name]]
    An opening tag[[Opening Tag]]
    A closing tag[[Closing Tag]]
    Or, a standalone tag[[Standalone Tag]]
Characters between an opening and closing tag is treated as markdown and not considered part of the HTML tag

[[Tag Name]]
A tag name is not case sensitive
It must begin with an alpha character
It can be up to 126 characters in length
After the first character any character can be alphanumeric or under-bar (_), not space
A subset of tag names are valid for Markdown[[Accepted Tag Names]]

[[Opening Tag]]
An opening tag consists of less-than (<) character, a tag name, optionally some attributes, and then an ending greater-than (>) character
Any accepted opening tag including attributes is passed directly to the generated document
Any opening tags that are not acceptable are ignored and dropped from the generated document

[[Closing Tag]]
A closing tag has a matching tag name, it consists of less-than (<), a slash (/), the tag name, optionally whitespace, and a greater-than (>) character
Any closing tag is passed directly to the generated document
Any closing tag that is not acceptable are ignored and dropped from the generated document

[[Standalone Tag]]
A standalone tag consists of a less-than (<) character, a tag name, optionally whitespace, and a greater-than (>) character
Any standalone tag is passed directly to the generated document
Any standalone tag that is not acceptable are ignored and dropped from the generated document

[[Accepted Tag Names]]
Only the following list of names are acceptable (they are not case-sensitive)
    address
    article
    aside
    blockquote
    caption
    center
    col
    colgroup
    dd
    details
    dialog
    dir
    div
    dl
    dt
    fieldset
    figcaption
    figure
    footer
    form
    frame
    frameset
    h1
    header
    hr
    legend
    li
    link
    main
    menu
    menuitem
    nav
    noframes
    ol
    optgroup
    option
    p
    param
    pre
    section
    source
    summary
    table
    tbody
    td
    tfoot
    th
    thead
    title
    tr
    track
    ul
The "title" tag is a child element of the head element
All tags other than "title" are children or siblings of the body element

[[Link]]
A link is treated as inline markup
It should generate 2 html tags, an opening <a> and closing </a> with transformed markdown between
A link has to varieties:
    A one-part link[[One-part Link]]
    Or, a two-part link[[Two-part Link]]

[[One-part Link]]
A one-part link is a link reference[[Link Reference]]
It has no corresponding link tag
Html anchor tags, <a>, are inserted into the generated document at the location of the link reference

[[Two-part Link]]
A two-part link is a link tag[[Link Tag]]
With a corresponding link reference[[Link Reference]]
To match, both the link tag and link reference must have identical link text[[Link Text]]
The html anchor tags, <a>, are inserted into the generated document at the location of the link tag
No html anchor tag is inserted at the location of the corresponding link reference

[[Link Tag]]
A link tag has only one part, link text[[Link Text]]
If there is no corresponding link reference the link tag is ignored

[[Link Reference]]
A link reference consist of four parts:
    The link text[[Link Text]]
    A following colon character (:), which is optional
    A link URL[[Link Url]]
    And, an optional link title[[Link Title]]
The link url and optional link title can be surrounded by paranthesis
Spaces may be between each part of the link reference
No other character besides whitespace can be between the parts of the link reference
A space must follow the link reference if it is followed by non-whitespace characters and no quoted link title is used

[[Link Text]]
Link text is markdown and should be processed to generate the appropriate html
It is identifed by an opening square bracket ([) and a closing square bracket (])

[[Link Url]]
A link url immediately follows link text, ignoring any whitespace of a optional colon character
It is a string of non-whitespace characters
It is expected to form a valid url but no validating of the url's correctness is performed
It is expected to consist of at least one non-whitespace character even though a valid url would have to be at least two, eg. #B

[[Link Title]]
A link title is optional
It immediately follows the link url, ignoring any whitespace
It can be identified as text inclosed in double-quotes (")
It is take as literal text and is not processed in any way except to include in the generate html anchor tag as a "title" attribute
A link title can be empty

[[Blank Line]]
A blank line block is a blank line that is not a part of another block
It has a higher precedence than a paragraph block and therefore can act as a divider of paragraphs

[[Paragraph Block]]
A paragraph block is non-whitespace characters that do not belong to another block
If it begins a line it can be indented by up to 3 whitespace characters
Leading or following whitespace has no significance on the formatting of the paragraph text and may be trimmed

[[Block Quote]]
A block quote is indicated be a greater-than (>) character beginning a line
It can be preceded by up to three whitespace characters
If a whitespace character follows the greater-than (>) character then it too is a part of the block quote
Block quote lines that adjoin one another belong should be grouped into a single block quote
The block quote translates to the html tag <blockquote>
Block quotes will have nested markdown including block quotes

[[List]]
Lists are composed of list items[[List Item]]
Lists come in two varieties:
    Ordered[[Ordered List]]
    And, unordered[[Unordered List]]
In Markdown there is no separate indicator of a list, instead the first list item is the indicator that a list is forming
Ordered and unordered list follow the same rules for indentation
The depth of indentation indicates the whether the next list item belongs to the list or is beginning a sub-list, where deeper means a sub-list
The depth is measured at the first non-whitespace character, not the list type indicator, eg. "* A list item" the depth is 3, measured to the "A"
List items that do not match numeric or bullet style of the previous list item belong to either a new sub-list or a previous list

[[List Item]]
It is more likely that someone will get the depth of whitespace wrong than a list type indicator, so changing indicator types is of greater significance than indentation
A tab is treated as 4 characters even though it may be possible to infer that editor software was treating as something else.
The first list item can be indented by up to three whitespace characters
Follow on list items can be indented list less all the way to zero indent, but not more
Subsequent first sublists identify a range that follow on sublist items can be indented: from the parent list until the first sublist item
List Items by two varieties of list type indicators:
    Bullet list type indicators[[Bullet]]
    Ordered list type indicators[[Number]]
The list item can contain markdown and should be processed
The list item should be terminated with the html closing tag </li>

[[Ordered List]]
An ordered list translates into the html tag <ol>
The first list item number is the starting value of the list and translates to to <ol> tag attribute "start"
  For example, "2. This is item two" would begin in html as: <ol start="2"><li>This is item two</li>
Markdown has no direct mechanism to set the "type" attribute of the <ol> tag
An ordered list is composed of ordered list items[[Ordered List Items]]
Other than the first number, the numbers are only relevant in that they identify the start of a list item

[[Unorderd List]]
An unorderd list generates the html tag <ul>
It is composed of list items that begin with a bullet[[Bullet]]
The same character must be used for all list item

[[Bullet]]
A bullet is indicated by one of three characters: plus, minus, or start (+,-, or *)
A space must follow the bullet character
The html tag <li> is inserted at the point of the bullet

[[Number]]
A number is indicated by an arabic number ranging from 0 to 10 digits (one shy of 10 billion)
The number must be followed by a dot (.) and a space
Other than the first item in a list the number is irrelevant and using "1. " for all list items is acceptable
The html tag <li> is inserted at the point of the number
The "value" attribute of the <li> should not be set

[[Auto Link]]

